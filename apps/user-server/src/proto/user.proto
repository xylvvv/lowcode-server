syntax = "proto3";

package user;

service UserService {
  rpc FindOne (FindOneDto) returns (DetailRes) {}
  rpc Create (CreateDto) returns (DetailRes) {}
  rpc Paginate(PageInfo) returns(PaginateRes) {}
  rpc Delete(DeleteDto) returns(CommonRes) {}
  rpc Update(UpdateDto) returns(CommonRes) {}
}

message CreateDto {
  required string username = 1;
  string password = 2;
  string phone = 3;
  string picture = 4;
  string nickname = 5;
}

message FindOneDto {
  string username = 1;
}

message DetailRes {
  int32 errno = 1;
  optional User data = 2;
  optional string message = 3;
}

message User {
  int32 id = 1;
  string username = 2;
  string phone = 3;
  string password = 4;
  string nickname = 5;
  int32 gender = 6;
  string picture = 7;
  string latestLoginAt = 8;
  bool isFrozen = 9;
  string createAt = 10;
  string updateAt = 11;
  repeated Role roles = 12;
}

message Role {
  int32 id = 1;
  string name = 2;
  optional string description = 3;
  string createAt = 4;
  string updateAt = 5;
  repeated Permission permissions = 6;
}

message PageInfo {
  required int32 pageIndex = 1;
  required int32 pageSize = 2;
}

message PaginateRes {
  int32 errno = 1;
  Users data = 2;
  string message = 3;
}

message Users {
  int32 total = 1;
  repeated User list = 2;
}

message Permission {
  int32 id = 1;
  Resource resource = 2;
  string action = 3;
  optional string conditions = 4;
  string createAt = 5;
  string updateAt = 6;
}

message Resource {
  int32 id = 1;
  string subject = 2;
  string actions = 3;
  optional string description = 4;
  string createAt = 5;
  string updateAt = 6;
}

message DeleteDto {
  required int32 id = 1;
}

message CommonRes {
  int32 errno = 1;
  bool data = 2;
  string message = 3;
}

message UpdateDto {
  required int32 id = 1;
  optional string password = 2;
  optional string nickname = 3;
  optional int32 gender = 4;
  optional string picture = 5;
  optional string latestLoginAt = 6;
  optional bool isFrozen = 7;
  repeated Role roles = 8;
  optional bool assignRoles = 9;
}
